<?xml version="1.0"?>
<launch>
    <arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface" />
    <!-- <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" /> -->

    <!-- startup simulated world -->
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find ur5_pkg)/world/my_world.world"/> <!-- custom world -->
        <arg name="paused" value="true"/> <!--paused in order to spawn the robot in the correct position -->
        <arg name="gui" value="true"/>
        <arg name="debug" value="false"/>
    </include>

    <!-- location of urdf -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur5_robot.urdf.xacro' transmission_hw_interface:=$(arg transmission_hw_interface)" />

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <!-- z = 1.02 to spawn the robot above the table -->
    <!-- -J shoulder_lift_joint -1.5 and -J elbow_joint 1.0 to set the initial pose of the robot-->
    <node name="spawn_gazebo_model" 
        pkg="gazebo_ros" 
        type="spawn_model" 
        args="-urdf 
        -param robot_description 
        -model robot 
        -z 1.02 
        -J shoulder_lift_joint -1.5 
        -J elbow_joint 1.0
        -unpause" 
        respawn="false" 
        output="screen" />

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find ur5_pkg)/config/ur5.yaml" command="load"/>

    <!-- CONTROLLER FOR OUR NODE -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" 
        args="shoulder_pan_joint_position_controller 
        shoulder_lift_joint_position_controller 
        elbow_joint_position_controller 
        wrist_1_joint_position_controller 
        wrist_2_joint_position_controller 
        wrist_3_joint_position_controller 
        joint_state_controller"/>

</launch>